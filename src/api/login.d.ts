/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/login/google": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Logs in and returns the auth cookie */
        post: operations["PostLoginGoogle"];
        /**
         * Logs the user out
         * @description For cookie based auth, deletes the cookie, effectively logging the user out.
         */
        delete: operations["DeleteLoginGoogle"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/login/google/userInfo": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Returns info about the logged in user */
        get: operations["GetLoginGoogleUserInfo"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Error: {
            code: components["schemas"]["ErrorCode"];
            /** @example An unexpected error occurred. */
            message: string;
        };
        /** @enum {string} */
        ErrorCode: "InternalError" | "AuthError" | "InputValidationError";
        UserInfo: {
            /** Format: date-time */
            expiresAt: string;
            isAdmin: boolean;
            profilePicURL: string;
            userEmail: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    PostLoginGoogle: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The Google JWT to log in with */
        requestBody: {
            content: {
                "application/json": {
                    googleJWT: string;
                };
            };
        };
        responses: {
            /** @description Auth successful. The JWT is returned in a cookie named `GOOGLE_AUTH_JWT`. You need to include this cookie subsequent requests if using cookie based auth.
             *      */
            200: {
                headers: {
                    /** @description The google auth token cookie. */
                    "Set-Cookie"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserInfo"];
                };
            };
            /** @description Unauthorized. */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    DeleteLoginGoogle: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description User logged out */
            200: {
                headers: {
                    /** @description Tells the browser to delete the cookie. */
                    "Set-Cookie"?: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    GetLoginGoogleUserInfo: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description User info */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserInfo"];
                };
            };
            /** @description Unauthorized. */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
}
